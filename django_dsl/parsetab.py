
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftB_OPrightU_OPNUMBER DATE STRING FIELD U_OP B_OP EQUAL LESSER_GREATER REGEX INexpression : expression B_OP expressionexpression : U_OP expressionexpression : '(' expression ')' operation : EQUAL\n                 | LESSER_GREATER\n                 | REGEX\n                 | IN\n    paren_list : '[' flat_list ']'flat_list : value\n                 | value ',' flat_listexpression : FIELD operation value\n    value : STRING\n            | NUMBER\n            | DATE\n            | paren_list\n            "
    
_lr_action_items = {'U_OP':([0,2,3,5,],[2,2,2,2,]),'(':([0,2,3,5,],[3,3,3,3,]),'FIELD':([0,2,3,5,],[4,4,4,4,]),'$end':([1,6,13,14,15,16,17,18,19,23,],[0,-2,-1,-3,-11,-12,-13,-14,-15,-8,]),'B_OP':([1,6,7,13,14,15,16,17,18,19,23,],[5,-2,5,-1,-3,-11,-12,-13,-14,-15,-8,]),'EQUAL':([4,],[9,]),'LESSER_GREATER':([4,],[10,]),'REGEX':([4,],[11,]),'IN':([4,],[12,]),')':([6,7,13,14,15,16,17,18,19,23,],[-2,14,-1,-3,-11,-12,-13,-14,-15,-8,]),'STRING':([8,9,10,11,12,20,24,],[16,-4,-5,-6,-7,16,16,]),'NUMBER':([8,9,10,11,12,20,24,],[17,-4,-5,-6,-7,17,17,]),'DATE':([8,9,10,11,12,20,24,],[18,-4,-5,-6,-7,18,18,]),'[':([8,9,10,11,12,20,24,],[20,-4,-5,-6,-7,20,20,]),',':([16,17,18,19,22,23,],[-12,-13,-14,-15,24,-8,]),']':([16,17,18,19,21,22,23,25,],[-12,-13,-14,-15,23,-9,-8,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,3,5,],[1,6,7,13,]),'operation':([4,],[8,]),'value':([8,20,24,],[15,22,22,]),'paren_list':([8,20,24,],[19,19,19,]),'flat_list':([20,24,],[21,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression B_OP expression','expression',3,'p_expression_b_op','parser.py',17),
  ('expression -> U_OP expression','expression',2,'p_expression_u_op','parser.py',25),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser.py',31),
  ('operation -> EQUAL','operation',1,'p_operation','parser.py',36),
  ('operation -> LESSER_GREATER','operation',1,'p_operation','parser.py',37),
  ('operation -> REGEX','operation',1,'p_operation','parser.py',38),
  ('operation -> IN','operation',1,'p_operation','parser.py',39),
  ('paren_list -> [ flat_list ]','paren_list',3,'p_paren_list','parser.py',45),
  ('flat_list -> value','flat_list',1,'p_flat_list','parser.py',49),
  ('flat_list -> value , flat_list','flat_list',3,'p_flat_list','parser.py',50),
  ('expression -> FIELD operation value','expression',3,'p_expression_ID','parser.py',58),
  ('value -> STRING','value',1,'p_value','parser.py',82),
  ('value -> NUMBER','value',1,'p_value','parser.py',83),
  ('value -> DATE','value',1,'p_value','parser.py',84),
  ('value -> paren_list','value',1,'p_value','parser.py',85),
]
